Vertex mode
compiled
linked
label 5
action type: 1, words:  152,  153,  0,  1, 
action type: 1, words:  155,  156,  0,  1, 
action type: 1, words:  158,  159,  0,  1, 
action type: 1, words:  161,  162,  0,  1, 
action type: 1, words:  164,  165,  0,  1, 
action type: 1, words:  167,  168,  0,  1, 
action type: 0, words:  27, 
action type: 1, words:  10,  9,  0,  1, 
action type: 0, words:  28, 
action type: 1, words:  10,  9,  1,  1, 
action type: 0, words:  30, 
action type: 1, words:  27,  26,  0,  1, 
action type: 0, words:  33, 
action type: 1, words:  32,  9,  0,  1, 
action type: 0, words:  34, 
action type: 1, words:  32,  9,  0,  1, 
action type: 0, words:  36, 
action type: 1, words:  60,  59,  1,  1, 
action type: 0, words:  37, 
action type: 1, words:  60,  59,  1,  1, 
action type: 0, words:  38, 
action type: 1, words:  60,  59,  1,  1, 
action type: 0, words:  40, 
action type: 1, words:  78,  59,  2,  1, 
action type: 0, words:  41, 
action type: 1, words:  78,  59,  2,  1, 
action type: 0, words:  42, 
action type: 1, words:  78,  59,  2,  1, 
action type: 0, words:  43, 
action type: 1, words:  78,  59,  2,  1, 
action type: 0, words:  44, 
action type: 1, words:  78,  59,  2,  1, 
action type: 0, words:  45, 
action type: 1, words:  78,  59,  2,  1, 
action type: 0, words:  46, 
action type: 1, words:  78,  59,  2,  1, 
action type: 0, words:  47, 
action type: 1, words:  78,  59,  2,  1, 
action type: 0, words:  48, 
action type: 1, words:  78,  59,  2,  1, 
action type: 0, words:  50, 
action type: 1, words:  109,  26,  0,  1, 
action type: 0, words:  51, 
action type: 1, words:  120,  26,  0,  1, 
action type: 0, words:  52, 
action type: 1, words:  126,  125,  1,  1, 
action type: 0, words:  53, 
action type: 1, words:  134,  132,  0,  1, 
action type: 0, words:  54, 
action type: 1, words:  137,  136,  0,  1, 
action type: 0, words:  55, 
action type: 1, words:  140,  139,  0,  1, 
Decompiled:
#version 330
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif

uniform vec4 x_MainTex_ST;
uniform vec4 x_BumpMap_ST;
uniform mat4 x_World2Object;
uniform vec4 x_WorldSpaceLightPos0;
uniform mat4 xglstate_matrix_mvp;
uniform mat4 x_LightMatrix0;
uniform mat4 x_Object2World;
uniform usampler2D gapid_sampler;

in vec4 x_glesTANGENT;
in vec3 x_glesNormal;
in vec4 x_glesMultiTexCoord0;
in vec4 x_glesVertex;
out vec4 xxlv_TEXCOORD0;
out vec3 xxlv_TEXCOORD1;
out vec2 xxlv_TEXCOORD2;
out int x_ogl_VertexID;
out int x_ogl_InstanceID;
out vec3 x_o_glesNormal;
out vec4 x_o_glesVertex;
out vec4 x_o_glesTANGENT;
out vec4 x_o_glesMultiTexCoord0;
out uvec4 gapid_result;
in vec2 gapid_coor;
uint gapid_curr_step;

void print(uvec4 value)
{
    gapid_curr_step = (gapid_curr_step - 1u);
    if ((gapid_curr_step == 0u))
    {
        gapid_result = value;
    }
}

void label(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(int value)
{
    print(uint(value));
}

void print(vec3 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), 0u));
}

void print(vec4 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), floatBitsToUint(value.w)));
}

void print(float value)
{
    print(floatBitsToUint(value));
}

void print(vec2 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), 0u, 0u));
}

void main()
{
    gapid_curr_step = texture(gapid_sampler, gapid_coor).x;
    label(5u);
    x_ogl_VertexID = gl_VertexID;
    print(x_ogl_VertexID);
    x_ogl_InstanceID = gl_InstanceID;
    print(x_ogl_InstanceID);
    x_o_glesNormal = x_glesNormal;
    print(x_o_glesNormal);
    x_o_glesVertex = x_glesVertex;
    print(x_o_glesVertex);
    x_o_glesTANGENT = x_glesTANGENT;
    print(x_o_glesTANGENT);
    x_o_glesMultiTexCoord0 = x_glesMultiTexCoord0;
    print(x_o_glesMultiTexCoord0);
    vec3 _16 = normalize(x_glesTANGENT.xyz);
    vec4 xtmpvar_1;
    xtmpvar_1 = vec4(_16.x, _16.y, _16.z, xtmpvar_1.w);
    print(xtmpvar_1);
    xtmpvar_1.w = x_glesTANGENT.w;
    print(3u);
    print(xtmpvar_1.w);
    vec3 xtmpvar_2 = normalize(x_glesNormal);
    print(xtmpvar_2);
    vec2 _44 = (x_glesMultiTexCoord0.xy * x_MainTex_ST.xy) + x_MainTex_ST.zw;
    vec4 xtmpvar_3;
    xtmpvar_3 = vec4(_44.x, _44.y, xtmpvar_3.z, xtmpvar_3.w);
    print(xtmpvar_3);
    vec2 _55 = (x_glesMultiTexCoord0.xy * x_BumpMap_ST.xy) + x_BumpMap_ST.zw;
    xtmpvar_3 = vec4(xtmpvar_3.x, xtmpvar_3.y, _55.x, _55.y);
    print(xtmpvar_3);
    mat3 xtmpvar_5;
    xtmpvar_5[0] = xtmpvar_1.xyz;
    print(0);
    print(xtmpvar_5[0]);
    xtmpvar_5[1] = (cross(xtmpvar_2, xtmpvar_1.xyz) * x_glesTANGENT.w);
    print(1);
    print(xtmpvar_5[1]);
    xtmpvar_5[2] = xtmpvar_2;
    print(2);
    print(xtmpvar_5[2]);
    mat3 xtmpvar_6;
    xtmpvar_6[0].x = xtmpvar_5[0].x;
    print(0);
    print(0u);
    print(xtmpvar_6[0].x);
    xtmpvar_6[0].y = xtmpvar_5[1].x;
    print(0);
    print(1u);
    print(xtmpvar_6[0].y);
    xtmpvar_6[0].z = xtmpvar_5[2].x;
    print(0);
    print(2u);
    print(xtmpvar_6[0].z);
    xtmpvar_6[1].x = xtmpvar_5[0].y;
    print(1);
    print(0u);
    print(xtmpvar_6[1].x);
    xtmpvar_6[1].y = xtmpvar_5[1].y;
    print(1);
    print(1u);
    print(xtmpvar_6[1].y);
    xtmpvar_6[1].z = xtmpvar_5[2].y;
    print(1);
    print(2u);
    print(xtmpvar_6[1].z);
    xtmpvar_6[2].x = xtmpvar_5[0].z;
    print(2);
    print(0u);
    print(xtmpvar_6[2].x);
    xtmpvar_6[2].y = xtmpvar_5[1].z;
    print(2);
    print(1u);
    print(xtmpvar_6[2].y);
    xtmpvar_6[2].z = xtmpvar_5[2].z;
    print(2);
    print(2u);
    print(xtmpvar_6[2].z);
    vec3 xtmpvar_7 = (xtmpvar_6 * (x_World2Object * x_WorldSpaceLightPos0).xyz);
    print(xtmpvar_7);
    vec3 xtmpvar_4 = xtmpvar_7;
    print(xtmpvar_4);
    gl_Position = (xglstate_matrix_mvp * x_glesVertex);
    gl_Position.z = 2.0 * gl_Position.z - gl_Position.w;
    print(0);
    print(gl_Position);
    xxlv_TEXCOORD0 = xtmpvar_3;
    print(xxlv_TEXCOORD0);
    xxlv_TEXCOORD1 = xtmpvar_4;
    print(xxlv_TEXCOORD1);
    xxlv_TEXCOORD2 = (x_LightMatrix0 * (x_Object2World * x_glesVertex)).xy;
    print(xxlv_TEXCOORD2);
}


spirv-cross OK
