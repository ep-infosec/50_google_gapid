Fragment mode
compiled
linked
label 5
action type: 1, words:  87,  88,  0,  1, 
action type: 1, words:  90,  91,  0,  1, 
action type: 1, words:  93,  94,  0,  1, 
action type: 0, words:  19, 
action type: 1, words:  10,  9,  0,  1, 
action type: 0, words:  22, 
action type: 1, words:  29,  28,  0,  1, 
action type: 0, words:  24, 
action type: 1, words:  39,  9,  0,  1, 
action type: 0, words:  25, 
action type: 1, words:  50,  49,  0,  1, 
action type: 0, words:  26, 
action type: 1, words:  50,  49,  1,  1, 
action type: 0, words:  27, 
action type: 1, words:  57,  49,  1,  1, 
action type: 0, words:  28, 
action type: 1, words:  57,  49,  0,  1, 
action type: 0, words:  29, 
action type: 1, words:  57,  49,  0,  1, 
action type: 0, words:  30, 
action type: 1, words:  81,  80,  1,  1, 
Decompiled:
#version 330
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif

uniform sampler2D x_MainTex;
uniform vec4 x_Color;
uniform vec4 x_WorldSpaceLightPos0;
uniform vec4 x_LightColor0;
uniform vec4 x_AddColor;
uniform usampler2D gapid_sampler;

in vec2 xxlv_TEXCOORD0;
in vec3 xxlv_TEXCOORD1;
in vec3 xxlv_TEXCOORD2;
out vec4 xgl_FragData[32];
out vec3 x_oxlv_TEXCOORD1;
out vec3 x_oxlv_TEXCOORD2;
out vec2 x_oxlv_TEXCOORD0;
out uvec4 gapid_result;
in vec2 gapid_coor;
uint gapid_curr_step;

void print(uvec4 value)
{
    gapid_curr_step = (gapid_curr_step - 1u);
    if ((gapid_curr_step == 0u))
    {
        gapid_result = value;
    }
}

void label(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(vec3 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), 0u));
}

void print(vec2 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), 0u, 0u));
}

void print(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(float value)
{
    print(floatBitsToUint(value));
}

void print(vec4 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), floatBitsToUint(value.w)));
}

void print(int value)
{
    print(uint(value));
}

void main()
{
    gapid_curr_step = texture(gapid_sampler, gapid_coor).x;
    label(5u);
    x_oxlv_TEXCOORD1 = xxlv_TEXCOORD1;
    print(x_oxlv_TEXCOORD1);
    x_oxlv_TEXCOORD2 = xxlv_TEXCOORD2;
    print(x_oxlv_TEXCOORD2);
    x_oxlv_TEXCOORD0 = xxlv_TEXCOORD0;
    print(x_oxlv_TEXCOORD0);
    vec3 xtmpvar_2 = (texture(x_MainTex, xxlv_TEXCOORD0).xyz * x_Color.xyz);
    print(xtmpvar_2);
    float xtmpvar_4 = max(0.0, dot(xxlv_TEXCOORD1, x_WorldSpaceLightPos0.xyz));
    print(xtmpvar_4);
    vec3 xtmpvar_5 = (((xtmpvar_2 * x_LightColor0.xyz) * xtmpvar_4) * 2.0);
    print(xtmpvar_5);
    vec4 xc_3;
    xc_3 = vec4(xtmpvar_5.x, xtmpvar_5.y, xtmpvar_5.z, xc_3.w);
    print(xc_3);
    xc_3.w = 0.0;
    print(3u);
    print(xc_3.w);
    vec4 xc_1;
    xc_1.w = xc_3.w;
    print(3u);
    print(xc_1.w);
    vec3 _67 = xc_3.xyz + (xtmpvar_2 * xxlv_TEXCOORD2);
    xc_1 = vec4(_67.x, _67.y, _67.z, xc_1.w);
    print(xc_1);
    vec3 _75 = xc_1.xyz + x_AddColor.xyz;
    xc_1 = vec4(_75.x, _75.y, _75.z, xc_1.w);
    print(xc_1);
    xgl_FragData[0] = xc_1;
    print(0);
    print(xgl_FragData[0]);
}


spirv-cross OK
