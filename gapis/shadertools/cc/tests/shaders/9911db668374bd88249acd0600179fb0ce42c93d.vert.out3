Vertex mode
compiled
linked
label 5
action type: 1, words:  94,  95,  0,  1, 
action type: 1, words:  97,  98,  0,  1, 
action type: 1, words:  100,  101,  0,  1, 
action type: 1, words:  103,  104,  0,  1, 
action type: 1, words:  106,  107,  0,  1, 
action type: 0, words:  23, 
action type: 1, words:  10,  9,  0,  1, 
action type: 0, words:  26, 
action type: 1, words:  19,  9,  0,  1, 
action type: 0, words:  27, 
action type: 1, words:  23,  9,  0,  1, 
action type: 0, words:  29, 
action type: 1, words:  27,  26,  1,  1, 
action type: 0, words:  30, 
action type: 1, words:  27,  26,  1,  1, 
action type: 0, words:  31, 
action type: 1, words:  23,  9,  0,  1, 
action type: 0, words:  32, 
action type: 1, words:  23,  9,  0,  1, 
action type: 0, words:  33, 
action type: 1, words:  60,  59,  1,  1, 
action type: 0, words:  34, 
action type: 1, words:  67,  66,  0,  1, 
action type: 0, words:  35, 
action type: 1, words:  78,  66,  0,  1, 
action type: 0, words:  36, 
action type: 1, words:  89,  64,  0,  1, 
Decompiled:
#version 330
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif

uniform mat4 xglstate_matrix_mvp;
uniform vec4 x_ProjectionParams;
uniform vec4 x_MainTex_ST;
uniform vec4 xunity_LightmapST;
uniform usampler2D gapid_sampler;

in vec4 x_glesVertex;
out vec2 xxlv_TEXCOORD0;
in vec4 x_glesMultiTexCoord0;
out vec2 xxlv_TEXCOORD1;
in vec4 x_glesMultiTexCoord1;
out vec4 xxlv_TEXCOORD2;
out int x_ogl_InstanceID;
out vec4 x_o_glesMultiTexCoord0;
out vec4 x_o_glesMultiTexCoord1;
out vec4 x_o_glesVertex;
out int x_ogl_VertexID;
out uvec4 gapid_result;
in vec2 gapid_coor;
uint gapid_curr_step;

void print(uvec4 value)
{
    gapid_curr_step = (gapid_curr_step - 1u);
    if ((gapid_curr_step == 0u))
    {
        gapid_result = value;
    }
}

void label(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(int value)
{
    print(uint(value));
}

void print(vec4 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), floatBitsToUint(value.w)));
}

void print(float value)
{
    print(floatBitsToUint(value));
}

void print(vec2 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), 0u, 0u));
}

void main()
{
    gapid_curr_step = texture(gapid_sampler, gapid_coor).x;
    label(5u);
    x_ogl_InstanceID = gl_InstanceID;
    print(x_ogl_InstanceID);
    x_o_glesMultiTexCoord0 = x_glesMultiTexCoord0;
    print(x_o_glesMultiTexCoord0);
    x_o_glesMultiTexCoord1 = x_glesMultiTexCoord1;
    print(x_o_glesMultiTexCoord1);
    x_o_glesVertex = x_glesVertex;
    print(x_o_glesVertex);
    x_ogl_VertexID = gl_VertexID;
    print(x_ogl_VertexID);
    vec4 xtmpvar_1 = (xglstate_matrix_mvp * x_glesVertex);
    print(xtmpvar_1);
    vec4 xtmpvar_2 = (xtmpvar_1 * 0.5);
    print(xtmpvar_2);
    vec4 xo_i0 = xtmpvar_2;
    print(xo_i0);
    vec2 xtmpvar_3;
    xtmpvar_3.x = xtmpvar_2.x;
    print(0u);
    print(xtmpvar_3.x);
    xtmpvar_3.y = (xtmpvar_2.y * x_ProjectionParams.x);
    print(1u);
    print(xtmpvar_3.y);
    vec2 _49 = xtmpvar_3 + vec2(xtmpvar_2.w);
    xo_i0 = vec4(_49.x, _49.y, xo_i0.z, xo_i0.w);
    print(xo_i0);
    xo_i0 = vec4(xo_i0.x, xo_i0.y, xtmpvar_1.zw.x, xtmpvar_1.zw.y);
    print(xo_i0);
    gl_Position = xtmpvar_1;
    gl_Position.z = 2.0 * gl_Position.z - gl_Position.w;
    print(0);
    print(gl_Position);
    xxlv_TEXCOORD0 = ((x_glesMultiTexCoord0.xy * x_MainTex_ST.xy) + x_MainTex_ST.zw);
    print(xxlv_TEXCOORD0);
    xxlv_TEXCOORD1 = ((x_glesMultiTexCoord1.xy * xunity_LightmapST.xy) + xunity_LightmapST.zw);
    print(xxlv_TEXCOORD1);
    xxlv_TEXCOORD2 = xo_i0;
    print(xxlv_TEXCOORD2);
}


spirv-cross OK
