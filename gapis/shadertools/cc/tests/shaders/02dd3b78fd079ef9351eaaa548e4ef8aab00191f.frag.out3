Fragment mode
compiled
linked
label 5
action type: 1, words:  116,  117,  0,  1, 
action type: 1, words:  119,  120,  0,  1, 
action type: 1, words:  122,  123,  0,  1, 
action type: 0, words:  20, 
action type: 1, words:  10,  9,  0,  1, 
action type: 0, words:  22, 
action type: 1, words:  23,  22,  0,  1, 
action type: 0, words:  24, 
action type: 1, words:  31,  9,  0,  1, 
action type: 0, words:  25, 
action type: 1, words:  40,  9,  0,  1, 
action type: 0, words:  27, 
action type: 1, words:  42,  9,  0,  1, 
action type: 0, words:  28, 
action type: 1, words:  40,  9,  1,  1, 
action type: 0, words:  30, 
action type: 1, words:  55,  22,  0,  1, 
action type: 0, words:  31, 
action type: 1, words:  40,  9,  0,  1, 
action type: 0, words:  35, 
action type: 1, words:  65,  51,  0,  1, 
action type: 0, words:  36, 
action type: 1, words:  71,  51,  0,  1, 
action type: 0, words:  38, 
action type: 1, words:  73,  22,  0,  1, 
action type: 0, words:  39, 
action type: 1, words:  87,  9,  0,  1, 
action type: 0, words:  40, 
action type: 1, words:  87,  9,  1,  1, 
action type: 0, words:  41, 
action type: 1, words:  103,  9,  0,  1, 
action type: 0, words:  42, 
action type: 1, words:  105,  9,  0,  1, 
action type: 0, words:  43, 
action type: 1, words:  110,  109,  1,  1, 
Decompiled:
#version 330
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif

uniform sampler2D x_MainTex;
uniform vec4 x_Color;
uniform sampler2D x_LightBuffer;
uniform vec4 x_SpecColor;
uniform usampler2D gapid_sampler;

in vec2 xxlv_TEXCOORD0;
in vec4 xxlv_TEXCOORD1;
in vec3 xxlv_TEXCOORD2;
out vec4 xgl_FragData[32];
out vec3 x_oxlv_TEXCOORD2;
out vec2 x_oxlv_TEXCOORD0;
out vec4 x_oxlv_TEXCOORD1;
out uvec4 gapid_result;
in vec2 gapid_coor;
uint gapid_curr_step;

void print(uvec4 value)
{
    gapid_curr_step = (gapid_curr_step - 1u);
    if ((gapid_curr_step == 0u))
    {
        gapid_result = value;
    }
}

void label(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(vec3 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), 0u));
}

void print(vec2 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), 0u, 0u));
}

void print(vec4 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), floatBitsToUint(value.w)));
}

void print(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(float value)
{
    print(floatBitsToUint(value));
}

void print(int value)
{
    print(uint(value));
}

void main()
{
    gapid_curr_step = texture(gapid_sampler, gapid_coor).x;
    label(5u);
    x_oxlv_TEXCOORD2 = xxlv_TEXCOORD2;
    print(x_oxlv_TEXCOORD2);
    x_oxlv_TEXCOORD0 = xxlv_TEXCOORD0;
    print(x_oxlv_TEXCOORD0);
    x_oxlv_TEXCOORD1 = xxlv_TEXCOORD1;
    print(x_oxlv_TEXCOORD1);
    vec4 xtmpvar_4 = texture(x_MainTex, xxlv_TEXCOORD0);
    print(xtmpvar_4);
    vec3 xtmpvar_5 = (xtmpvar_4.xyz * x_Color.xyz);
    print(xtmpvar_5);
    vec4 _38 = xxlv_TEXCOORD1;
    _38.z = xxlv_TEXCOORD1.w;
    vec4 xtmpvar_6 = textureProj(x_LightBuffer, _38.xyz);
    print(xtmpvar_6);
    vec4 xlight_3 = xtmpvar_6;
    print(xlight_3);
    vec4 xtmpvar_7 = (-log2(max(xlight_3, vec4(0.001000000047497451305389404296875))));
    print(xtmpvar_7);
    xlight_3.w = xtmpvar_7.w;
    print(3u);
    print(xlight_3.w);
    vec3 xtmpvar_8 = (xtmpvar_7.xyz + xxlv_TEXCOORD2);
    print(xtmpvar_8);
    xlight_3 = vec4(xtmpvar_8.x, xtmpvar_8.y, xtmpvar_8.z, xlight_3.w);
    print(xlight_3);
    float xtmpvar_11 = (xtmpvar_7.w * xtmpvar_4.w);
    print(xtmpvar_11);
    float xspec_10 = xtmpvar_11;
    print(xspec_10);
    vec3 xtmpvar_12 = ((xtmpvar_5 * xlight_3.xyz) + ((xlight_3.xyz * x_SpecColor.xyz) * xspec_10));
    print(xtmpvar_12);
    vec4 xc_9;
    xc_9 = vec4(xtmpvar_12.x, xtmpvar_12.y, xtmpvar_12.z, xc_9.w);
    print(xc_9);
    xc_9.w = ((xtmpvar_4.w * x_Color.w) + (xspec_10 * x_SpecColor.w));
    print(3u);
    print(xc_9.w);
    vec4 xc_2 = xc_9;
    print(xc_2);
    vec4 xtmpvar_1 = xc_2;
    print(xtmpvar_1);
    xgl_FragData[0] = xtmpvar_1;
    print(0);
    print(xgl_FragData[0]);
}


spirv-cross OK
