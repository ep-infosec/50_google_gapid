Fragment mode
compiled
linked
label 5
action type: 1, words:  74,  75,  0,  1, 
action type: 1, words:  77,  78,  0,  1, 
action type: 1, words:  80,  81,  0,  1, 
action type: 0, words:  131, 
action type: 1, words:  10,  9,  0,  1, 
action type: 0, words:  143, 
action type: 1, words:  22,  21,  0,  1, 
action type: 0, words:  156, 
action type: 1, words:  22,  21,  0,  1, 
action type: 0, words:  158, 
action type: 1, words:  22,  21,  0,  1, 
action type: 0, words:  159, 
action type: 1, words:  22,  21,  0,  1, 
action type: 0, words:  160, 
action type: 1, words:  22,  21,  0,  1, 
action type: 0, words:  161, 
action type: 1, words:  22,  21,  0,  1, 
action type: 0, words:  164, 
action type: 1, words:  61,  60,  0,  1, 
Decompiled:
#version 330
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif

uniform sampler2D xs_Texture0;
uniform sampler2D xs_Texture1;
uniform vec4 xu_LiveryColour;
uniform usampler2D gapid_sampler;

in vec2 xv_TexCoordDecal;
in vec4 xv_Normal;
out vec4 xgl_FragColor;
in float xv_Depth;
out float x_ov_Depth;
out vec4 x_ov_Normal;
out vec2 x_ov_TexCoordDecal;
out uvec4 gapid_result;
in vec2 gapid_coor;
uint gapid_curr_step;

void print(uvec4 value)
{
    gapid_curr_step = (gapid_curr_step - 1u);
    if ((gapid_curr_step == 0u))
    {
        gapid_result = value;
    }
}

void label(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(float value)
{
    print(floatBitsToUint(value));
}

void print(vec4 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), floatBitsToUint(value.w)));
}

void print(vec2 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), 0u, 0u));
}

void main()
{
    gapid_curr_step = texture(gapid_sampler, gapid_coor).x;
    label(5u);
    x_ov_Depth = xv_Depth;
    print(x_ov_Depth);
    x_ov_Normal = xv_Normal;
    print(x_ov_Normal);
    x_ov_TexCoordDecal = xv_TexCoordDecal;
    print(x_ov_TexCoordDecal);
    vec4 xdecalTexture = texture(xs_Texture0, xv_TexCoordDecal);
    print(xdecalTexture);
    float xdecalAlpha = xdecalTexture.w;
    print(xdecalAlpha);
    xdecalAlpha = (xdecalAlpha * step(xv_Normal.z, 0.0));
    print(xdecalAlpha);
    xdecalAlpha = (xdecalAlpha * step(0.0, xv_TexCoordDecal.x));
    print(xdecalAlpha);
    xdecalAlpha = (xdecalAlpha * step(xv_TexCoordDecal.x, 1.0));
    print(xdecalAlpha);
    xdecalAlpha = (xdecalAlpha * step(0.0, xv_TexCoordDecal.y));
    print(xdecalAlpha);
    xdecalAlpha = (xdecalAlpha * step(xv_TexCoordDecal.y, 1.0));
    print(xdecalAlpha);
    xgl_FragColor = vec4(xdecalTexture.xyz, xdecalAlpha);
    print(xgl_FragColor);
}


spirv-cross OK
