Vertex mode
compiled
linked
label 5
action type: 1, words:  53,  54,  0,  1, 
action type: 1, words:  56,  57,  0,  1, 
action type: 1, words:  59,  60,  0,  1, 
action type: 1, words:  62,  63,  0,  1, 
action type: 1, words:  65,  66,  0,  1, 
action type: 0, words:  13, 
action type: 1, words:  15,  14,  1,  1, 
action type: 0, words:  14, 
action type: 1, words:  28,  26,  0,  1, 
action type: 0, words:  15, 
action type: 1, words:  46,  45,  0,  1, 
Decompiled:
#version 330
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif

uniform mat4 xu_modelViewProjectionMatrix;
uniform vec4 xu_materialAmbient;
uniform usampler2D gapid_sampler;

in vec4 xa_position;
out vec4 xv_color;
in vec4 xa_color;
out vec2 xv_texCoord;
in vec2 xa_texCoord;
out vec2 x_oa_texCoord;
out vec4 x_oa_position;
out int x_ogl_VertexID;
out int x_ogl_InstanceID;
out vec4 x_oa_color;
out uvec4 gapid_result;
in vec2 gapid_coor;
uint gapid_curr_step;

void print(uvec4 value)
{
    gapid_curr_step = (gapid_curr_step - 1u);
    if ((gapid_curr_step == 0u))
    {
        gapid_result = value;
    }
}

void label(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(vec2 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), 0u, 0u));
}

void print(vec4 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), floatBitsToUint(value.w)));
}

void print(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(int value)
{
    print(uint(value));
}

void main()
{
    gapid_curr_step = texture(gapid_sampler, gapid_coor).x;
    label(5u);
    x_oa_texCoord = xa_texCoord;
    print(x_oa_texCoord);
    x_oa_position = xa_position;
    print(x_oa_position);
    x_ogl_VertexID = gl_VertexID;
    print(x_ogl_VertexID);
    x_ogl_InstanceID = gl_InstanceID;
    print(x_ogl_InstanceID);
    x_oa_color = xa_color;
    print(x_oa_color);
    gl_Position = (xu_modelViewProjectionMatrix * xa_position);
    gl_Position.z = 2.0 * gl_Position.z - gl_Position.w;
    print(0);
    print(gl_Position);
    xv_color = (xa_color * vec4(xu_materialAmbient.w, xu_materialAmbient.w, xu_materialAmbient.w, 1.0));
    print(xv_color);
    xv_texCoord = xa_texCoord;
    print(xv_texCoord);
}


spirv-cross OK
