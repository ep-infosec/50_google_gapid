Fragment mode
compiled
linked
label 5
action type: 1, words:  93,  94,  0,  1, 
action type: 0, words:  23, 
action type: 1, words:  9,  8,  0,  1, 
label 11
label 15
label 12
action type: 0, words:  27, 
action type: 1, words:  25,  24,  1,  1, 
label 14
label 13
action type: 0, words:  29, 
action type: 1, words:  25,  24,  1,  1, 
action type: 0, words:  31, 
action type: 1, words:  33,  24,  0,  7, 
action type: 0, words:  33, 
action type: 1, words:  38,  37,  0,  6, 
action type: 0, words:  34, 
action type: 1, words:  47,  46,  0,  5, 
action type: 0, words:  35, 
action type: 1, words:  9,  8,  0,  1, 
action type: 0, words:  37, 
action type: 1, words:  53,  52,  0,  7, 
action type: 0, words:  38, 
action type: 1, words:  53,  52,  1,  1, 
action type: 0, words:  39, 
action type: 1, words:  53,  52,  2,  1, 
action type: 0, words:  42, 
action type: 1, words:  75,  74,  1,  1, 
action type: 0, words:  43, 
action type: 1, words:  75,  74,  2,  1, 
action type: 0, words:  45, 
action type: 1, words:  82,  74,  0,  3, 
action type: 0, words:  47, 
action type: 1, words:  85,  84,  0,  1, 
Decompiled:
#version 330
#ifdef GL_ARB_shading_language_420pack
#extension GL_ARB_shading_language_420pack : require
#endif

struct xstruct_type
{
    float xa;
    int xb;
    bool xarr[5];
};

uniform sampler2D x_MainTex;
uniform usampler2D gapid_sampler;

in vec2 xxlv_TEXCOORD2;
out vec2 x_oxlv_TEXCOORD2;
out uvec4 gapid_result;
in vec2 gapid_coor;
int xi;
xstruct_type xstruct_val;
mat3 xtheMatrix;
mat3 xmatrix2;
uint gapid_curr_step;

void print(uvec4 value)
{
    gapid_curr_step = (gapid_curr_step - 1u);
    if ((gapid_curr_step == 0u))
    {
        gapid_result = value;
    }
}

void label(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(vec2 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), 0u, 0u));
}

void print(uint value)
{
    print(uvec4(value, 0u, 0u, 0u));
}

void print(int value)
{
    print(uint(value));
}

void print(float value)
{
    print(floatBitsToUint(value));
}

void print(bool value)
{
    print(value ? 1u : 0u);
}

void print(vec3 value)
{
    print(uvec4(floatBitsToUint(value.x), floatBitsToUint(value.y), floatBitsToUint(value.z), 0u));
}

void main()
{
    gapid_curr_step = texture(gapid_sampler, gapid_coor).x;
    label(5u);
    x_oxlv_TEXCOORD2 = xxlv_TEXCOORD2;
    print(x_oxlv_TEXCOORD2);
    xi = 0;
    print(xi);
    float xarr4[7];
    float xarr3[7];
    float xarr2[6];
    float xarr[5];
    for (;;)
    {
        label(11u);
        label(15u);
        if ((xi < 7))
        {
            label(12u);
            int _26 = xi;
            xarr4[_26] = 3.0;
            print(_26);
            print(xarr4[_26]);
            label(14u);
            continue;
        }
        else
        {
            break;
        }
    }
    label(13u);
    xarr4[6] = 4.0;
    print(6);
    print(xarr4[6]);
    xarr3 = xarr4;
    print(xarr3[0u]);
    print(xarr3[1u]);
    print(xarr3[2u]);
    print(xarr3[3u]);
    print(xarr3[4u]);
    print(xarr3[5u]);
    print(xarr3[6u]);
    xarr2 = float[](1.0, 2.0, 3.0, 4.0, 5.0, 6.0);
    print(xarr2[0u]);
    print(xarr2[1u]);
    print(xarr2[2u]);
    print(xarr2[3u]);
    print(xarr2[4u]);
    print(xarr2[5u]);
    xarr = float[](1.0, 2.0, 3.0, 4.0, 5.0);
    print(xarr[0u]);
    print(xarr[1u]);
    print(xarr[2u]);
    print(xarr[3u]);
    print(xarr[4u]);
    xi = 5;
    print(xi);
    xstruct_val = xstruct_type(1.2000000476837158203125, 3, bool[](true, true, true, false, false));
    print(xstruct_val.xa);
    print(xstruct_val.xb);
    print(xstruct_val.xarr[0u]);
    print(xstruct_val.xarr[1u]);
    print(xstruct_val.xarr[2u]);
    print(xstruct_val.xarr[3u]);
    print(xstruct_val.xarr[4u]);
    xstruct_val.xa = 2.2000000476837158203125;
    print(0);
    print(xstruct_val.xa);
    int _66 = xstruct_val.xb;
    xstruct_val.xarr[_66] = (xstruct_val.xa > 2.0);
    print(2);
    print(_66);
    print(xstruct_val.xarr[_66]);
    xtheMatrix[1] = vec3(3.0);
    print(1);
    print(xtheMatrix[1]);
    xtheMatrix[2].x = 16.0;
    print(2);
    print(0u);
    print(xtheMatrix[2].x);
    xmatrix2 = xtheMatrix;
    print(xmatrix2[0u]);
    print(xmatrix2[1u]);
    print(xmatrix2[2u]);
    gl_FragDepth = 1.2000000476837158203125;
    print(gl_FragDepth);
}


spirv-cross OK
